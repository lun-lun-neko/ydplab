name: Deploy React to GitHub Pages (develop)

on:
  push:
    branches: [develop] # ‚úÖ developÏóê pushÎê† ÎïåÎßàÎã§ Î∞∞Ìè¨
  workflow_dispatch: # ÏàòÎèô Ïã§ÌñâÎèÑ ÌóàÏö©

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: |
          if [ -f package-lock.json ]; then npm ci; else npm install; fi

      - name: Build
        env:
          # CRA Í≤ΩÍ≥†Î°ú Ïã§Ìå® Î∞©ÏßÄ (ViteÎ©¥ ÏûàÏñ¥ÎèÑ Î¨¥Î∞©)
          CI: false
          # ÌÅ∞ Î≤àÎì§ ÎåÄÎπÑ(ÏÑ†ÌÉù)
          NODE_OPTIONS: --max-old-space-size=4096
        run: npm run build

      - name: Show top-level folders (debug)
        run: ls -la

      # build / dist / out / public ÏïàÏóêÏÑú index.html ÏûàÎäî Í≤ΩÎ°ú ÏûêÎèô ÌÉêÏßÄ
      - name: Detect static output directory
        id: detect
        run: |
          set -e
          PUBLISH_DIR=""
          for d in build dist out public; do
            if [ -f "$d/index.html" ]; then
              PUBLISH_DIR="$d"
              break
            fi
          done
          if [ -z "$PUBLISH_DIR" ]; then
            echo "‚ùå No index.html found in build/dist/out/public."
            echo "Folders (depth 2) for debugging:"
            find . -maxdepth 2 -type d -print
            exit 1
          fi
          echo "publish_dir=$PUBLISH_DIR" >> "$GITHUB_OUTPUT"
          echo "‚úÖ Using $PUBLISH_DIR"

      - name: Show detected dir (debug)
        run: ls -la "${{ steps.detect.outputs.publish_dir }}"

      # SPA ÎùºÏö∞ÌåÖ 404 Î∞©ÏßÄ
      - name: Add 404 fallback for SPA
        run: cp "${{ steps.detect.outputs.publish_dir }}/index.html" "${{ steps.detect.outputs.publish_dir }}/404.html"

      # üëâ Î∞òÎìúÏãú Í∞êÏßÄÎêú Í≤ΩÎ°úÎ°ú ÏóÖÎ°úÎìú!
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ steps.detect.outputs.publish_dir }}

  deploy:name: Deploy React to GitHub Pages (develop)on:  push:    branches: [ develop ]   #%20%E2%9C%85%20develop%EC%97%90%20push%EB%90%A0%20%EB%95%8C%EB%A7%88%EB%8B%A4%20%EB%B0%B0%ED%8F%AC%20%20workflow_dispatch:%20%20%20%20%20%20%20%20#%20%EC%88%98%EB%8F%99%20%EC%8B%A4%ED%96%89%EB%8F%84%20%ED%97%88%EC%9A%A9permissions:%20%20contents:%20read%20%20pages:%20write%20%20id-token:%20writeconcurrency:%20%20group:%20%22pages%22%20%20cancel-in-progress:%20truejobs:%20%20build:%20%20%20%20runs-on:%20ubuntu-latest%20%20%20%20steps:%20%20%20%20%20%20-%20name:%20Checkout%20%20%20%20%20%20%20%20uses:%20actions/checkout@v4%20%20%20%20%20%20-%20name:%20Setup%20Node%20%20%20%20%20%20%20%20uses:%20actions/setup-node@v4%20%20%20%20%20%20%20%20with:%20%20%20%20%20%20%20%20%20%20node-version:%2020%20%20%20%20%20%20%20%20%20%20cache:%20npm%20%20%20%20%20%20-%20name:%20Install%20dependencies%20%20%20%20%20%20%20%20run:%20|%20%20%20%20%20%20%20%20%20%20if%20[%20-f%20package-lock.json%20];%20then%20npm%20ci;%20else%20npm%20install;%20fi%20%20%20%20%20%20-%20name:%20Build%20%20%20%20%20%20%20%20env:%20%20%20%20%20%20%20%20%20%20#%20CRA%20%EA%B2%BD%EA%B3%A0%EB%A1%9C%20%EC%8B%A4%ED%8C%A8%20%EB%B0%A9%EC%A7%80%20(Vite%EB%A9%B4%20%EC%9E%88%EC%96%B4%EB%8F%84%20%EB%AC%B4%EB%B0%A9)%20%20%20%20%20%20%20%20%20%20CI:%20false%20%20%20%20%20%20%20%20%20%20#%20%ED%81%B0%20%EB%B2%88%EB%93%A4%20%EB%8C%80%EB%B9%84(%EC%84%A0%ED%83%9D)%20%20%20%20%20%20%20%20%20%20NODE_OPTIONS:%20--max-old-space-size=4096%20%20%20%20%20%20%20%20run:%20npm%20run%20build%20%20%20%20%20%20-%20name:%20Show%20top-level%20folders%20(debug)%20%20%20%20%20%20%20%20run:%20ls%20-la%20%20%20%20%20%20#%20build%20/%20dist%20/%20out%20/%20public%20%EC%95%88%EC%97%90%EC%84%9C%20index.html%20%EC%9E%88%EB%8A%94%20%EA%B2%BD%EB%A1%9C%20%EC%9E%90%EB%8F%99%20%ED%83%90%EC%A7%80%20%20%20%20%20%20-%20name:%20Detect%20static%20output%20directory%20%20%20%20%20%20%20%20id:%20detect%20%20%20%20%20%20%20%20run:%20|%20%20%20%20%20%20%20%20%20%20set%20-e%20%20%20%20%20%20%20%20%20%20PUBLISH_DIR=%22%22%20%20%20%20%20%20%20%20%20%20for%20d%20in%20build%20dist%20out%20public;%20do%20%20%20%20%20%20%20%20%20%20%20%20if%20[%20-f%20%22$d/index.html%22%20];%20then%20%20%20%20%20%20%20%20%20%20%20%20%20%20PUBLISH_DIR=%22$d%22%20%20%20%20%20%20%20%20%20%20%20%20%20%20break%20%20%20%20%20%20%20%20%20%20%20%20fi%20%20%20%20%20%20%20%20%20%20done%20%20%20%20%20%20%20%20%20%20if%20[%20-z%20%22$PUBLISH_DIR%22%20];%20then%20%20%20%20%20%20%20%20%20%20%20%20echo%20%22%E2%9D%8C%20No%20index.html%20found%20in%20build/dist/out/public.%22%20%20%20%20%20%20%20%20%20%20%20%20echo%20%22Folders%20(depth%202)%20for%20debugging:%22%20%20%20%20%20%20%20%20%20%20%20%20find%20.%20-maxdepth%202%20-type%20d%20-print%20%20%20%20%20%20%20%20%20%20%20%20exit%201%20%20%20%20%20%20%20%20%20%20fi%20%20%20%20%20%20%20%20%20%20echo%20%22publish_dir=$PUBLISH_DIR%22%20%3E%3E%20%22$GITHUB_OUTPUT%22%20%20%20%20%20%20%20%20%20%20echo%20%22%E2%9C%85%20Using%20$PUBLISH_DIR%22%20%20%20%20%20%20-%20name:%20Show%20detected%20dir%20(debug)%20%20%20%20%20%20%20%20run:%20ls%20-la%20%22${{%20steps.detect.outputs.publish_dir%20}}%22%20%20%20%20%20%20#%20SPA%20%EB%9D%BC%EC%9A%B0%ED%8C%85%20404%20%EB%B0%A9%EC%A7%80%20%20%20%20%20%20-%20name:%20Add%20404%20fallback%20for%20SPA%20%20%20%20%20%20%20%20run:%20cp%20%22${{%20steps.detect.outputs.publish_dir%20}}/index.html%22%20%22${{%20steps.detect.outputs.publish_dir%20}}/404.html%22%20%20%20%20%20%20#%20%F0%9F%91%89%20%EB%B0%98%EB%93%9C%EC%8B%9C%20%EA%B0%90%EC%A7%80%EB%90%9C%20%EA%B2%BD%EB%A1%9C%EB%A1%9C%20%EC%97%85%EB%A1%9C%EB%93%9C!%20%20%20%20%20%20-%20name:%20Upload%20Pages%20artifact%20%20%20%20%20%20%20%20uses:%20actions/upload-pages-artifact@v3%20%20%20%20%20%20%20%20with:%20%20%20%20%20%20%20%20%20%20path:%20${{%20steps.detect.outputs.publish_dir%20}}%20%20deploy:%20%20%20%20if:%20github.ref%20==%20'refs/heads/develop'%20%20%20%20needs:%20build%20%20%20%20runs-on:%20ubuntu-latest%20%20%20%20environment:%20%20%20%20%20%20name:%20github-pages%20%20%20%20%20%20url:%20${{%20steps.deployment.outputs.page_url%20}}%20%20%20%20steps:%20%20%20%20%20%20-%20name:%20Deploy%20to%20GitHub%20Pages%20%20%20%20%20%20%20%20id:%20deployment%20%20%20%20%20%20%20%20uses:%20actions/deploy-pages@v4%20%20%20%20%20%20%20%20#%20name:%20Deploy%20React%20to%20GitHub%20Pages#%20on:#%20%20%20push:#%20%20%20%20%20branches:%20[%20main%20]%20%20%20#%20%EA%B8%B0%EB%B3%B8%20%EB%B8%8C%EB%9E%9C%EC%B9%98%EC%97%90%20%EB%A7%9E%EA%B2%8C%20%EC%88%98%EC%A0%95#%20%20%20workflow_dispatch:#%20permissions:#%20%20%20contents:%20read#%20%20%20pages:%20write#%20%20%20id-token:%20write#%20concurrency:#%20%20%20group:%20%22pages%22#%20%20%20cancel-in-progress:%20true#%20jobs:#%20%20%20build:#%20%20%20%20%20runs-on:%20ubuntu-latest#%20%20%20%20%20steps:#%20%20%20%20%20%20%20-%20name:%20Checkout#%20%20%20%20%20%20%20%20%20uses:%20actions/checkout@v4#%20%20%20%20%20%20%20-%20name:%20Setup%20Node#%20%20%20%20%20%20%20%20%20uses:%20actions/setup-node@v4#%20%20%20%20%20%20%20%20%20with:#%20%20%20%20%20%20%20%20%20%20%20node-version:%2020#%20%20%20%20%20%20%20%20%20%20%20cache:%20npm#%20%20%20%20%20%20%20-%20name:%20Install%20dependencies#%20%20%20%20%20%20%20%20%20run:%20|#%20%20%20%20%20%20%20%20%20%20%20if%20[%20-f%20package-lock.json%20];%20then%20npm%20ci;%20else%20npm%20install;%20fi#%20%20%20%20%20%20%20-%20name:%20Build#%20%20%20%20%20%20%20%20%20env:#%20%20%20%20%20%20%20%20%20%20%20CI:%20false%20%20%20#%20CRA%20%EA%B2%BD%EA%B3%A0%EB%A1%9C%20%EC%8B%A4%ED%8C%A8%20%EB%B0%A9%EC%A7%80#%20%20%20%20%20%20%20%20%20run:%20npm%20run%20build#%20%20%20%20%20%20%20-%20name:%20Show%20top-level%20folders%20(debug)#%20%20%20%20%20%20%20%20%20run:%20ls%20-la#%20%20%20%20%20%20%20#%20build%20/%20dist%20/%20out%20/%20public%20%EC%95%88%EC%97%90%EC%84%9C%20index.html%20%EC%9E%88%EB%8A%94%20%EA%B2%BD%EB%A1%9C%20%EC%9E%90%EB%8F%99%20%ED%83%90%EC%A7%80#%20%20%20%20%20%20%20-%20name:%20Detect%20static%20output%20directory#%20%20%20%20%20%20%20%20%20id:%20detect#%20%20%20%20%20%20%20%20%20run:%20|#%20%20%20%20%20%20%20%20%20%20%20set%20-e#%20%20%20%20%20%20%20%20%20%20%20PUBLISH_DIR=%22%22#%20%20%20%20%20%20%20%20%20%20%20for%20d%20in%20build%20dist%20out%20public;%20do#%20%20%20%20%20%20%20%20%20%20%20%20%20if%20[%20-f%20%22$d/index.html%22%20];%20then#%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20PUBLISH_DIR=%22$d%22#%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20break#%20%20%20%20%20%20%20%20%20%20%20%20%20fi#%20%20%20%20%20%20%20%20%20%20%20done#%20%20%20%20%20%20%20%20%20%20%20if%20[%20-z%20%22$PUBLISH_DIR%22%20];%20then#%20%20%20%20%20%20%20%20%20%20%20%20%20echo%20%22%E2%9D%8C%20No%20index.html%20found%20in%20build/dist/out/public.%22#%20%20%20%20%20%20%20%20%20%20%20%20%20echo%20%22Folders%20(depth%202)%20for%20debugging:%22#%20%20%20%20%20%20%20%20%20%20%20%20%20find%20.%20-maxdepth%202%20-type%20d%20-print#%20%20%20%20%20%20%20%20%20%20%20%20%20exit%201#%20%20%20%20%20%20%20%20%20%20%20fi#%20%20%20%20%20%20%20%20%20%20%20echo%20%22publish_dir=$PUBLISH_DIR%22%20%3E%3E%20%22$GITHUB_OUTPUT%22#%20%20%20%20%20%20%20%20%20%20%20echo%20%22%E2%9C%85%20Using%20$PUBLISH_DIR%22#%20%20%20%20%20%20%20-%20name:%20Show%20detected%20dir%20(debug)#%20%20%20%20%20%20%20%20%20run:%20ls%20-la%20%22${{%20steps.detect.outputs.publish_dir%20}}%22#%20%20%20%20%20%20%20#%20SPA%20%EB%9D%BC%EC%9A%B0%ED%8C%85%20404%20%EB%B0%A9%EC%A7%80#%20%20%20%20%20%20%20-%20name:%20Add%20404%20fallback%20for%20SPA#%20%20%20%20%20%20%20%20%20run:%20cp%20%22${{%20steps.detect.outputs.publish_dir%20}}/index.html%22%20%22${{%20steps.detect.outputs.publish_dir%20}}/404.html%22#%20%20%20%20%20%20%20#%20%F0%9F%91%89%20%EB%B0%98%EB%93%9C%EC%8B%9C%20%EA%B0%90%EC%A7%80%EB%90%9C%20%EA%B2%BD%EB%A1%9C%EB%A1%9C%20%EC%97%85%EB%A1%9C%EB%93%9C!#%20%20%20%20%20%20%20-%20name:%20Upload%20Pages%20artifact#%20%20%20%20%20%20%20%20%20uses:%20actions/upload-pages-artifact@v3#%20%20%20%20%20%20%20%20%20with:#%20%20%20%20%20%20%20%20%20%20%20path:%20${{%20steps.detect.outputs.publish_dir%20}}#%20%20%20deploy:#%20%20%20%20%20needs:%20build#%20%20%20%20%20runs-on:%20ubuntu-latest#%20%20%20%20%20environment:#%20%20%20%20%20%20%20name:%20github-pages#%20%20%20%20%20%20%20url:%20${{%20steps.deployment.outputs.page_url%20}}#%20%20%20%20%20steps:#%20%20%20%20%20%20%20-%20name:%20Deploy%20to%20GitHub%20Pages#%20%20%20%20%20%20%20%20%20id:%20deployment#%20%20%20%20%20%20%20%20%20uses:%20actions/deploy-pages@v4
    if: github.ref == 'refs/heads/develop'
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
# name: Deploy React to GitHub Pages

# on:
#   push:
#     branches: [ main ]   # Í∏∞Î≥∏ Î∏åÎûúÏπòÏóê ÎßûÍ≤å ÏàòÏ†ï
#   workflow_dispatch:

# permissions:
#   contents: read
#   pages: write
#   id-token: write

# concurrency:
#   group: "pages"
#   cancel-in-progress: true

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v4

#       - name: Setup Node
#         uses: actions/setup-node@v4
#         with:
#           node-version: 20
#           cache: npm

#       - name: Install dependencies
#         run: |
#           if [ -f package-lock.json ]; then npm ci; else npm install; fi

#       - name: Build
#         env:
#           CI: false   # CRA Í≤ΩÍ≥†Î°ú Ïã§Ìå® Î∞©ÏßÄ
#         run: npm run build

#       - name: Show top-level folders (debug)
#         run: ls -la

#       # build / dist / out / public ÏïàÏóêÏÑú index.html ÏûàÎäî Í≤ΩÎ°ú ÏûêÎèô ÌÉêÏßÄ
#       - name: Detect static output directory
#         id: detect
#         run: |
#           set -e
#           PUBLISH_DIR=""
#           for d in build dist out public; do
#             if [ -f "$d/index.html" ]; then
#               PUBLISH_DIR="$d"
#               break
#             fi
#           done

#           if [ -z "$PUBLISH_DIR" ]; then
#             echo "‚ùå No index.html found in build/dist/out/public."
#             echo "Folders (depth 2) for debugging:"
#             find . -maxdepth 2 -type d -print
#             exit 1
#           fi

#           echo "publish_dir=$PUBLISH_DIR" >> "$GITHUB_OUTPUT"
#           echo "‚úÖ Using $PUBLISH_DIR"

#       - name: Show detected dir (debug)
#         run: ls -la "${{ steps.detect.outputs.publish_dir }}"

#       # SPA ÎùºÏö∞ÌåÖ 404 Î∞©ÏßÄ
#       - name: Add 404 fallback for SPA
#         run: cp "${{ steps.detect.outputs.publish_dir }}/index.html" "${{ steps.detect.outputs.publish_dir }}/404.html"

#       # üëâ Î∞òÎìúÏãú Í∞êÏßÄÎêú Í≤ΩÎ°úÎ°ú ÏóÖÎ°úÎìú!
#       - name: Upload Pages artifact
#         uses: actions/upload-pages-artifact@v3
#         with:
#           path: ${{ steps.detect.outputs.publish_dir }}

#   deploy:
#     needs: build
#     runs-on: ubuntu-latest
#     environment:
#       name: github-pages
#       url: ${{ steps.deployment.outputs.page_url }}
#     steps:
#       - name: Deploy to GitHub Pages
#         id: deployment
#         uses: actions/deploy-pages@v4
